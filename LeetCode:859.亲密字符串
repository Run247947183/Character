class Solution {
    public boolean buddyStrings(String A, String B) {
        // 第一种情况：两个字符串长度不等
        if (A.length() != B.length()) {
            return false;
        }
        // 第二种情况：两个字符串相同
        // 接着判断 A 中是否存在两个以上相同的字符
        // 如果存在直接返回 true 否则 返回 false
        if (A.equals(B)) {
            Map<Character, Integer> map = new HashMap<>();
            for (char x : A.toCharArray()) {
                map.put(x, map.getOrDefault(x, 0) + 1);
            }
            for (int j = 0; j < A.length(); j++) {
                if (map.get(A.charAt(j)) > 1) {
                    return true;
                }
            }
            return false;
        }
        // 第三种情况：判断两个字符串不相同的部分有几处
        // 如果有两处再判断将两个字符反过来，结果会不会和 B 相同
        // 如果存在1处或者2处以上的不相同部分，那么直接返回 false
        int count = 0;
        char A1 = 'a';
        char B1 = 'a';
        char A2 = 'a';
        char B2 = 'a';
        for (int i = 0; i < A.length(); i++) {
            if (A.charAt(i) != B.charAt(i)) {
                count++;
                if (count == 1) {
                    A1 = A.charAt(i);
                    B1 = B.charAt(i);
                }
                if (count == 2) {
                    A2 = A.charAt(i);
                    B2 = B.charAt(i);
                }
            }
            if (count > 2) {
                return false;
            }
        }
        return count == 2 && A1 == B2 && A2 == B1;
    }
}
