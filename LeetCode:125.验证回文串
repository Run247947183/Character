class Solution {
    public boolean isPalindrome(String s) {
        if (s.length() <= 1) {
            return true;
        }
        char[] array = s.toCharArray();
        int left = 0;
        int right = array.length - 1;
        // 对字符串中的字符进行筛选
        // 只有数字和字母参与比较
        // 要将字母的大小写统一起来，便于进行比较
        // 空格为有效回文串
        while (left < right) {
            // 调整空格
            if ((int)array[left] == 32) {
                left++;
            }
            if ((int)array[right] == 32) {
                right--;
            }

            //调整大小写
            if (array[left] - 'A' >= 0 && array[left] - 'Z' <= 0) {
                array[left] = (char)((int)array[left] + 32);
            }
            if (array[right] - 'A' >= 0 && array[right] - 'Z' <= 0) {
                array[right] = (char)((int)array[right] + 32);
            }

            //判断字符是否为字母或者数字
            boolean flag1 = (array[left] >= '0' && array[left] <= '9')
                || (array[left] >= 'a' && array[left] <= 'z');
            boolean flag2 = (array[right] >= '0' && array[right] <='9')
                || (array[right] >= 'a' && array[right] <= 'z');

            // 开始进行比较
            if (flag1 && flag2 && array[left] != array[right]) {
                return false;
            } else if (!flag1) {
                left++;
            } else if (!flag2) {
                right--;
            } else {
                left++;
                right--;
            }
        }
        return true;
    }
}

// 方法二：
class Solution {
    public boolean isPalindrome(String s) {
        StringBuilder sb = new StringBuilder();
        for (char c : s.toCharArray()) {
            if (c >= 'A' && c <= 'Z') {
                c = (char)(c + 'a' - 'A');
            }
            if ((c >= 'a' && c <= 'z')
                || c >= '0' && c <= '9') {
                sb.append(c);
            }
        }
        String str = sb.toString();
        int left = 0;
        int right = str.length() - 1;
        while (left < right) {
            if (str.charAt(left) != str.charAt(right)) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    }
}
